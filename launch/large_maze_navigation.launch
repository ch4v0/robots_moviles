<launch>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
   <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="world_name" value="$(find robots_moviles)/worlds/large_maze.world"/> 
  </include>

 
  <arg name="x" />
  <arg name="y" />

  <arg name="robot_name" value="mobile_base"/>
  <arg name="initial_pose_x" value="$(arg x)"/>
  <arg name="initial_pose_y" value="$(arg y)"/>
  <arg name="initial_pose_z" value="0.3"/>
  <arg name="initial_pose_roll" value="0.0"/>
  <arg name="initial_pose_pitch" value="0.0"/>
  <arg name="initial_pose_yaw" value="0.0"/>

  <param name="robot_description"
        command="$(find xacro)/xacro.py '$(find robots_moviles)/urdf/kobuki_with_laser.urdf.xacro'"/>
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_$(arg robot_name)" 
        args="-x $(arg initial_pose_x) -y $(arg initial_pose_y) -z $(arg initial_pose_z) -R $(arg initial_pose_roll) -P $(arg initial_pose_pitch) -Y $(arg initial_pose_yaw) -unpause -urdf -param robot_description -model $(arg robot_name)" respawn="false">
  </node>
  
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>
  
  <node pkg="nodelet" type="nodelet" name="$(arg robot_name)_nodelet_manager" args="manager"/>


   <arg name="map_file" default="$(find robots_moviles)/param/large_maze/large_maze.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="controller_frequency" value="20.0"/>
    <rosparam file="$(find robots_moviles)/param/large_maze/move_base_params.yaml" command="load"/>
    <rosparam file="$(find robots_moviles)/param/large_maze/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find robots_moviles)/param/large_maze/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find robots_moviles)/param/large_maze/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find robots_moviles)/param/large_maze/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find robots_moviles)/param/large_maze/dwa_local_planner_params.yaml" command="load" />
    <rosparam file="$(find robots_moviles)/param/large_maze/navfn.yaml" command="load" />
    <rosparam file="$(find robots_moviles)/param/large_maze/carrotplaner.yaml" command="load" />
    <remap from="cmd_vel" to="mobile_base/commands/velocity"/>
  </node>
  
 <!--  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator" >
    <rosparam command="load" file="$(find kobuki_softnode)/param/diagnostics.yaml" />
  </node>
 -->
 
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find robots_moviles)/large_maze.rviz"/>
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom_link" args="$(arg initial_pose_x) $(arg initial_pose_y) 0 0 0 $(arg initial_pose_yaw) /map /odom 100" />
  <!--node pkg="tf" type="static_transform_publisher" name="odom_to_footprint" args="0 0 0 0 0 0 /odom /base_footprint 100" />
  <node pkg="tf" type="static_transform_publisher" name="odom_to_base_link" args="0 0 0 0 0 0 /base_footprint /base_link 100" /-->
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_hokuyo" args="0 0 0 0 0 0 /base_link /hokuyo 100" />

   <!-- Run AMCL -->
  <!--node pkg="amcl" type="amcl" name="amcl" args="scan:=hokuyo/scan" output="screen">

    <rosparam file="$(find robots_moviles)/param/large_maze/amcl_large_maze.yaml" command="load" />
      
  </node-->

</launch> 